
/*
 * horizontal_exclusive_scan: exclusive scans a 2d array horizontally
 * REQUIRES: threads per block >= width
 * REQUIRES: num blocks >= height
 * REQUIRES: input, output have size height x width
 */
__global__ void horizontal_exclusive_scan(float *input, float *output,
                                          int height, int width)
{
    extern __shared__ float temp[];
    int tdx = threadIdx.x; int offset = 1;
    temp[2*tdx] = input[2*tdx];
    temp[2*tdx+1] = input[2*tdx+1];
    for(int d = n>>1; d > 0; d >>= 1)
    {
        __syncthreads();
        if(tdx < d)
        {
            int ai = offset*(2*tdx+1)-1;
            int bi = offset*(2*tdx+2)-1;
            temp[bi] += temp[ai];
        }
        offset *= 2;
    }

    if(tdx == 0) temp[n - 1] = 0;

    for(int d = 1; d < n; d *= 2)
    {
        offset >>= 1;
        __syncthreads();
        if(tdx < d)
        {
            int ai = offset*(2*tdx+1)-1;
            int bi = offset*(2*tdx+2)-1;
            float t = temp[ai];
            temp[ai] = temp[bi];
            temp[bi] += t;
        }
        __syncthreads();
    }

    output[2*tdx] = temp[2*tdx];
    output[2*tdx+1] = temp[2*tdx+1];
}

